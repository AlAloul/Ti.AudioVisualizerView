/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.audiovisualizerview;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollProxy;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiC;
import org.appcelerator.titanium.util.Log;
import org.appcelerator.titanium.util.TiConfig;
import org.appcelerator.titanium.util.TiConvert;
import org.appcelerator.titanium.proxy.TiViewProxy;
import org.appcelerator.titanium.view.TiCompositeLayout;
import org.appcelerator.titanium.view.TiCompositeLayout.LayoutArrangement;
import org.appcelerator.titanium.view.TiUIView;

/* these are the proposals of ID: */
import com.pheelicks.utils.*;
import com.pheelicks.visualizer.*;
import com.pheelicks.visualizer.renderer.*;
/*   
 * 
 *  [javac] ~/Documents/APPC_WORKSPACE/Ti.AudioVisualizerView/android/src/ti/audiovisualizerview/VisualizerViewProxy.java:24: error: package com.pheelicks.utils does not exist
    [javac] import com.pheelicks.utils.*;
    [javac] ^
    [javac] ~/Documents/APPC_WORKSPACE/Ti.AudioVisualizerView/android/src/ti/audiovisualizerview/VisualizerViewProxy.java:25: error: package com.pheelicks.visualizer does not exist
    [javac] import com.pheelicks.visualizer.*;
    [javac] ^
    [javac] ~/Documents/APPC_WORKSPACE/Ti.AudioVisualizerView/android/src/ti/audiovisualizerview/VisualizerViewProxy.java:26: error: package com.pheelicks.visualizer.renderer does not exist
    [javac] import com.pheelicks.visualizer.renderer.*;
    [javac] ^
    [javac] Note: [KrollBindingGen] Generating JSON: file:/Users/fuerst/Documents/APPC_WORKSPACE/Ti.AudioVisualizerView/android/build/generated/json/org/appcelerator/titanium/bindings/audiovisualizerview.json

 * 
 * 
 */

import android.app.Activity;

// This proxy can be created by calling Audiovisualizerview.createExample({message: "hello world"})
@Kroll.proxy(creatableInModule = AudiovisualizerviewModule.class)
public class VisualizerViewProxy extends TiViewProxy {
	// Standard Debugging variables
	private static final String LCAT = "Visualizer";

	private class VisualizerView extends TiUIView {
		public VisualizerView(TiViewProxy proxy) {
			super(proxy);
			LayoutArrangement arrangement = LayoutArrangement.DEFAULT;

			if (proxy.hasProperty(TiC.PROPERTY_LAYOUT)) {
				String layoutProperty = TiConvert.toString(proxy
						.getProperty(TiC.PROPERTY_LAYOUT));
				if (layoutProperty.equals(TiC.LAYOUT_HORIZONTAL)) {
					arrangement = LayoutArrangement.HORIZONTAL;
				} else if (layoutProperty.equals(TiC.LAYOUT_VERTICAL)) {
					arrangement = LayoutArrangement.VERTICAL;
				}
			}
			setNativeView(new TiCompositeLayout(proxy.getActivity(),
					arrangement));
		}

		@Override
		public void processProperties(KrollDict d) {
			super.processProperties(d);
		}
	}

	// Constructor
	public VisualizerViewProxy() {
		super();
	}

	@Override
	public TiUIView createView(Activity activity) {
		TiUIView view = new VisualizerView(this);
		view.getLayoutParams().autoFillsHeight = true;
		view.getLayoutParams().autoFillsWidth = true;
		return view;
	}

	// Handle creation options
	@Override
	public void handleCreationDict(KrollDict options) {
		super.handleCreationDict(options);

		if (options.containsKey("message")) {
			Log.d(LCAT,
					"example created with message: " + options.get("message"));
		}
	}

	// Methods
	@Kroll.method
	public void printMessage(String message) {
		Log.d(LCAT, "printing message: " + message);
	}

	@Kroll.getProperty
	@Kroll.method
	public String getMessage() {
		return "Hello World from my module";
	}

	@Kroll.setProperty
	@Kroll.method
	public void setMessage(String message) {
		Log.d(LCAT, "Tried setting module message to: " + message);
	}
}